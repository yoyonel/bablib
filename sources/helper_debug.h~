#ifndef __HELPER_DEBUG__
#define __HELPER_DEBUG__
/**
bool Viewer::checkFrameBufferStatus()
{
	GLenum status = glCheckFramebufferStatusEXT(GL_FRAMEBUFFER_EXT);
	switch (status){
		case GL_FRAMEBUFFER_COMPLETE_EXT:
			INFOMSG("GL_FRAMEBUFFER_COMPLETE_EXT");
			return true;
		case GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT:
			ERRORMSG("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT");
			break;
		case GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT:
			ERRORMSG("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT");
			break;
		//case GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT:
		//	ERRORMSG("GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT");
		//	break;
		case GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT:
			ERRORMSG("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT");
			break;
		case GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT:
			ERRORMSG("GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT");
			break;
		case GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT:
			ERRORMSG("GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT");
			break;
		case GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT:
			ERRORMSG("GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT");
			break;
		case GL_FRAMEBUFFER_UNSUPPORTED_EXT:
			ERRORMSG("GL_FRAMEBUFFER_UNSUPPORTED_EXT");
			break;
		default:
			ERRORMSG("Unknown FBO error");
			break;
	}
	return false;
}
	/**/
#endif
