# @PROJECT_NAME@Config.cmake: Configuration file to use @PROJECT_NAME@
# Authors: Nicolas David and Bruno Vallet
# Usage: in your CMake file:
#include(MatisMacros)
#__default_install_configuration()
#find_package(@PROJECT_NAME@ COMPONENTS @COMPONENT_LIST@) # if this does not work, try FIND_PACKAGE(@PROJECT_NAME@ NO_MODULE)
#if(@PROJECT_NAME@_FOUND)
#	include_directories(${@PROJECT_NAME@_INCLUDE_DIRS})
#	add_definitions(${@PROJECT_NAME@_DEFINITIONS})
#else(@PROJECT_NAME@_FOUND)
#	message(FATAL_ERROR "@PROJECT_NAME@ NOT found ! This library can be found at put_a_location_here")
#endif(@PROJECT_NAME@_FOUND)
# and after you added your_target depending on @PROJECT_NAME@:
#target_link_libraries(your_target ${@PROJECT_NAME@_LIBRARIES})

get_filename_component(@PROJECT_NAME@_SELF_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
include(${@PROJECT_NAME@_SELF_DIR}/@PROJECT_NAME@-targets.cmake OPTIONAL)

set(@PROJECT_NAME@_DEFINITIONS @_DEFINITIONS@)
set(@PROJECT_NAME@_INCLUDE_DIR "@_INCLUDE_DIRS@")
set(@PROJECT_NAME@_LIBRARY @_LIBRARIES@)

include_directories("@CMAKE_INSTALL_PREFIX@/include")
link_directories(${@PROJECT_NAME@_SELF_DIR}/../lib)

message(STATUS " @PROJECT_NAME@_FIND_COMPONENTS  " ${@PROJECT_NAME@_FIND_COMPONENTS})
#init INCLUDE_DIRS and LIBRARY to NULL
set(@PROJECT_NAME@_INCLUDE_DIRS "")
set(@PROJECT_NAME@_LIBRARIES "")
# test if each component target exist on xxx-targets.cmake
#Â if target exist add current target to LIBRARY variable and ADD associate include directories to INCLUDE_DIRS
foreach(@PROJECT_NAME@_COMPONENT ${@PROJECT_NAME@_FIND_COMPONENTS})
	if(NOT TARGET ${@PROJECT_NAME@_COMPONENT})
		set(@PROJECT_NAME@_FOUND FALSE)
		if(NOT @PROJECT_NAME@_FIND_QUIETLY)
  			message(STATUS ${@PROJECT_NAME@_COMPONENT} "  not Found in " ${@PROJECT_NAME@_SELF_DIR}/@PROJECT_NAME@-targets.cmake)
		endif(NOT @PROJECT_NAME@_FIND_QUIETLY)
	else(NOT TARGET ${@PROJECT_NAME@_COMPONENT})
		set(@PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_LIBRARIES} ${@PROJECT_NAME@_COMPONENT})
		list(FIND @PROJECT_NAME@_LIBRARY ${@PROJECT_NAME@_COMPONENT} INDICE_COMPONENT)
		list(GET @PROJECT_NAME@_INCLUDE_DIR ${INDICE_COMPONENT} INCLUDE_COMPONENT)
		list(REMOVE_DUPLICATES INCLUDE_COMPONENT)
		set(@PROJECT_NAME@_INCLUDE_DIRS ${@PROJECT_NAME@_INCLUDE_DIRS} ${INCLUDE_COMPONENT})
	endif(NOT TARGET ${@PROJECT_NAME@_COMPONENT})
endforeach(@PROJECT_NAME@_COMPONENT ${@PROJECT_NAME@_FIND_COMPONENTS})

if(NOT @PROJECT_NAME@_FIND_COMPONENTS )
	set(@PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_LIBRARY})
	set(@PROJECT_NAME@_INCLUDE_DIRS ${@PROJECT_NAME@_INCLUDE_DIR})
	message(STATUS " no asked component set _LIBRARIES and _INCLUDE_DIRS to all component ")
	message(STATUS " @PROJECT_NAME@_INCLUDE_DIRS " "${@PROJECT_NAME@_INCLUDE_DIRS}" )
	message(STATUS " @PROJECT_NAME@_LIBRARIES" "${@PROJECT_NAME@_LIBRARIES}")
endif(NOT @PROJECT_NAME@_FIND_COMPONENTS )

if(@PROJECT_NAME@_FOUND)
	if(NOT @PROJECT_NAME@_FIND_QUIETLY)
  		message(STATUS "Found @PROJECT_NAME@")
	endif(NOT @PROJECT_NAME@_FIND_QUIETLY)
endif(@PROJECT_NAME@_FOUND)

message(STATUS "Found @PROJECT_NAME@ in MATIS/Extern using ${@PROJECT_NAME@_SELF_DIR}/@PROJECT_NAME@Config.cmake")
